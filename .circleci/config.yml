version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: Ubuntu
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: ''
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
            
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt 
      - run:
          command: |
            . venv/bin/activate
            flask db upgrade
            flask test
          environment:
            CONDUIT_SECRET: 'something-really-secret'
            FLASK_APP: autoapp.py
            FLASK_DEBUG: 1
            DATABASE_URL: postgresql://Ubuntu:somePwd@localhost:5432/postgres
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
          paths:
            - 'venv'

  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/my-awesome-ci-expr:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/my-awesome-ci-expr:latest
            docker push $DOCKER_HUB_USER_ID/my-awesome-ci-expr:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/my-awesome-ci-expr:latest

  deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Heroku Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

      - run:
          name: Smoke Test
          command: |
            HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://$HEROKU_APP_NAME.herokuapp.com/`
            if [ "$HTTPCODE" -ne 200 ];then
               echo "heroku app not responding, failing deploy"
               exit 1
            fi
      
workflows:
  version: 2
  build-test-and-install:
    jobs:
      - build
	  - docker-build-and-push:
          requires:
            - build
      - deploy-heroku:
          requires:
            - build 